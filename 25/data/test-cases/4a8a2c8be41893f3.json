{"uid":"4a8a2c8be41893f3","name":"Regisztráció - Míg sikeres nem lesz (ha a próbált felhasználónév már foglalt lenne)","fullName":"test.test_all_cases_v2.Test11ConduitFunction#test_sign_up_while","historyId":"6806bc40954d7e2344c00d983b234692","time":{"start":1681170393285,"stop":1681170394868,"duration":1583},"status":"failed","statusMessage":"AssertionError: assert 'Sikeres regisztráció' == 'Welcome!'\n  - Welcome!\n  + Sikeres regisztráció","statusTrace":"self = <test_all_cases_v2.Test11ConduitFunction object at 0x7ff0ca32d510>\n\n    @allure.id('TC1.3 cond P+ ')\n    @allure.title('Regisztráció - Míg sikeres nem lesz (ha a próbált felhasználónév már foglalt lenne)')\n    def test_sign_up_while(self):\n        ### reg. folyamat indítása menűpont kattintásával\n        self.useRegistrationButton()\n    \n        ### Inputmezők adatainak kigyűjtése - küldés a while cikluson belül\n        inp_dict_sub = self.inp_values(sub_dict='While')\n        inpFields_dict = self.gathering_input_fields(inp_fields_elements={}, placeholders_dict=inp_dict_sub)\n    \n        ### Asserthez szükséges elvárt és tényleges értékek\n        expected_Pstr = self.expected_text(info='Pass')\n        popup_title = ''\n    \n        n = 1\n        while popup_title != expected_Pstr['Title']:\n    \n            self.send_inputs(inpFields_dict, inp_dict_sub)\n    \n            actual_str = self.popup_text(actual_str={})\n            expected_Fstr = self.expected_text(info='While')\n            popup_title = actual_str['reg_succ']\n    \n            if actual_str['reg_succ'] == expected_Fstr['Title']:\n                ### REG. ELLENŐRZÉSE INDIREKT NEGATÍV ÁGON - SIKERTELEN REG.\n                assert actual_str['reg_succ'] == expected_Fstr['Title']\n                assert actual_str['reg_succ_s'] == expected_Fstr['Text']\n                ### Alábbi csak a konzolos 'többletinfó' kiíratáshoz szükséges\n                reg_succ_N = expected_Fstr['Title']\n                reg_succ_s_N = expected_Fstr['Text']\n    \n                ### Új belépési adatokat generálása n érték növelésével mivel az adott 'user#n' név már foglalt volt\n                n += 1\n                inp_dict_sub.update({'Username': f'user{n}',\n                                     'Email': f'user{n}@hotmail.com', })\n    \n                self.click_popup_ok_btn()\n    \n            else:\n                if n == 1:\n                    ### Alábbi csak a konzolos 'többletinfó' kiíratáshoz szükséges\n                    actual_str['reg_succ'] = 'Sikeres regisztráció'\n                    reg_succ_s_N = 'elsőre'\n    \n                ### REG. ELLENŐRZÉSE POZITÍV ÁGON - SIKERES REG.\n>               assert actual_str['reg_succ'] == expected_Pstr['Title']\nE               AssertionError: assert 'Sikeres regisztráció' == 'Welcome!'\nE                 - Welcome!\nE                 + Sikeres regisztráció\n\ntest/test_all_cases_v2.py:297: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_Test11ConduitFunction","time":{"start":1681170391978,"stop":1681170393285,"duration":1307},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"_xunit_setup_method_fixture_Test11ConduitFunction::0","time":{"start":1681170394922,"stop":1681170394979,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"as_id","value":"TC1.3 cond P+ "},{"name":"parentSuite","value":"test"},{"name":"suite","value":"test_all_cases_v2"},{"name":"subSuite","value":"Test11ConduitFunction"},{"name":"host","value":"fv-az449-296"},{"name":"thread","value":"3082-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test.test_all_cases_v2"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"4a8a2c8be41893f3.json","parameterValues":[]}